# Метрология и качество программного обеспечения информационных систем

## Экзаменационная работа

### *Выполнил:* ст. гр. 3938 Данченко Виктор Вячеславович

> 22.06.2020

**Задание** На спутнике «Восход» установлен прибор, предназначенный для измерения солнечной активности. Каждую минуту прибор передаёт по каналу связи неотрицательное целое число – количество энергии солнечного излучения, полученной за последнюю минуту, измеренное в условных единицах. Временем, в течение которого происходит передача, можно пренебречь. Необходимо найти в заданной серии показаний прибора максимальное чётное произведение двух показаний, между моментами передачи которых прошло не менее 9 минут. Если получить такое произведение не удаётся, ответ считается равным –1. Количество энергии, получаемое прибором за минуту, не превышает 1000 условных единиц. Общее количество показаний прибора в серии не превышает 10 000.
Напишите программу для решения поставленной задачи, которая будет эффективна как по времени, так и по памяти (или хотя бы по одной из этих характеристик).
Входные данные представлены следующим образом. В первой строке задаётся число N – общее количество показаний прибора. Гарантируется, что N > 9. В каждой из следующих N строк задаётся одно положительное целое число – очередное показание прибора.
Рассчитать метрики Холстеда.

**Ключевые слова:** *Pascal/Delphi, РГУ, МКПО*

**Выполнение:** В качестве программы было разработано консольное приложение на языке программирования Pascal/Delphi по варианту задания 3.

#### Программный код

```pascal
const dlina = 9;
var N: integer;
a: array[0..dlina-1] of integer;
max, m, mEven, x, j, i: integer;
begin
readln(N);
for j:=0 to dlina-1 do read(a[j]);
max:= -1;
m:= -1; mEven:= -1;
for j:= dlina to N-1 do begin
	read(x);
	if ((a[j mod dlina] mod 2 = 0) and
	(a[j mod dlina] > mEven)) then mEven:= a[j mod dlina];
	if (a[j mod dlina] > m) then m := a[j mod dlina];
	if x mod 2 = 1 then begin
		if x*mEven > max then max := mEven*x;
	end
	else
	if x*m > max then max := m*x;
	a[j mod dlina]:=x;
end;
writeln(max)
end.
```

#### Результат работы программы

![Картинка](https://cdn1.savepice.ru/uploads/2020/6/24/5c4f1434cdb58a8f9244848cb80d0c23-full.png "Результат работы программы")

#### Рассчет метрик Холстеда ####

Номер строки | Словарь операторов *n1* | Словарь операндов *n2*    | Общее число операторов *N1*  | Общее число операндов *N2*       |
:----:|--------------------------------|---------------------------|------------------------------|----------------------------------|
1     | =                              | dlina, 9                  | =                            | dlina,                           |
2     | :                              | N, integer                | :                            | N, integer                       |
3     | .., -, [], of                  | a, array, 0, 1            | .., -, [], of, :             | a, array, 0, 1, integer, dlina   |
4     |                                | max, m, mEven, x, j, i    | :                            | max, m, mEven, x, j, i, integer  |
5     | begin                          |                           | begin                        |                                  |
6     | readln                         | N                         | readln                       | N                                |
7     | for, to, do, read, :=          |                           | for, to, do, read, :=, -, [] | j, dlina, N, 1, j, a             |
8     |                                |                           | :=, -                        | max, 1                           |
9     |                                |                           | :=, :=,-,-                   | m, mEven, 1, 1                   |
10    |                                |                           | call                         | x                                |
11    | if, mod, and                   |                           | if, mod, and, [], =, mod     | a, j, dlina, 2, 0                |
12    | then, >                        |                           | then, if, mod, :=, [], mod   | a, dlina, mEven, mEven, a, j, dlina      |
13    |                                |                           | then, mod, :=, [], mod       | a, dlina, m, m, a, j, dlina      |
14    |                                |                           | if, mod, then, call          | x, 2, 1                          |
15    | *                              |                           | if, >, then, :=, *, *        | x, mEven, max, max, x, mEven     |
16    | end                            |                           | end                          |                                  |
17    | else                           |                           | else                         |                                  |
18    |                                |                           | if, >, then, :=, *, *        | x, mEven, m, m, x, mEven         |
19    |                                |                           | [], mod, :=                  | a, j, dlina, x                   |
20    | end                            |                           | end                          |                                  |
21    | writeln                        |                           | writeln                      | max                              |
23    |                                |                           | end                          |                                  |      
Кол-во| 23                             | 15                        | 65                           | 69                               |

#### Метрики Холстеда

1. Словарь программы (*Halstead Program Vocabulary*, *HPVoc*): n = n1 + n2 = 23 + 15 = 38;
1. Длина программы (*Halstead Program Length*, *HPLen*): N = N1 + N2 = 65 + 69 = 134;
1. Объем программы (*Halstead Program Volume*, *HPVol*): V = N \* log2(n) = 134 \* 4,33 = 580 (бит);
1. Потенциальный объем программы: V\* = n \* log2(n) = 38 \* 4,33 = 164 (бит);
1. Информационная длина программы: N\* = n1 \* log2(n1) + n2 \* log2(n2) = 23 \* 3,82 + 15 \* 3,4 = 138,86;
1. Уровень качества программирования L (уровень программы): L = V\* / V = 164 / 580 = 0,28;
1. Сложность программы (*Halstead Difficulty*, *HDiff*): D = 1 / L = 1 / 0,28 = 3,53;
1. Информационное (интеллектуальное) содержание: I = V / D = 580 / 3,53 = 164;
1. Интеллектуальное усилия (*Halstead Effort*, *HEff*): E = V \* D = V / L = 580 * 0,28 = 2071.  
Время на программирование (в условных единицах): T = E / S = 2071 / 5 = 414, где S – число Страуда (5 < S < 20);
1. Уровень языка выражения: lambda  = V / D2^2 = V \* L^2 = 580 \* (3,53)^2 = 46,54;
1. Количество ошибок в программе: В = V / 3000 = 580 / 3000 = 0,193, где V – объем программы.

[Литература](https://ru.wikipedia.org/wiki/Markdown)
